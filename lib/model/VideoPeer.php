<?php


/**
 * Skeleton subclass for performing query and update operations on the 'video' table.
 *
 * 
 *
 * This class was autogenerated by Propel 1.4.2 on:
 *
 * 05/07/15 13:54:43
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    lib.model
 */
class VideoPeer extends BaseVideoPeer {
    
    public static function PutVideo($values, $id = NULL)
    {
        if ($id != NULL)
            $video = VideoPeer::retrieveByPk($id);
        else
            $video = new Video;
        
        $video->setName($values["name"]);
        $video->setFilename($values["file"]->save(sfConfig::get('app_video_path') . $values["file"]->getOriginalName()));
        $video->setWidth(self::getFileWidth($video->getFilename()));
        $video->setHeight(self::getFileHeight($video->getFilename()));
        $video->setAudioBitrate(self::getFileAudioBitrate($video->getFilename()));
        $video->setVideoBitrate(self::getFileVideoBitrate($video->getFilename()));
        $video->setUserId(self::getUserId());
        return $video->save();
    }

    public static function getInfo($id)
    {
        $video = VideoPeer::retrieveByPk($id);
        
        $arInfo = array(
            "name" => $video->getName(),
            "width" => $video->getWidth(),
            "height" => $video->getHeight(),
            "video_bitrate" => $video->getVideoBitrate(),
            "audio_bitrate" => $video->getAudioBitrate()
        );
        return $arInfo;
    }
        
    private static function getFileWidth($file)
    {
        // @TODO return video width
        return "640";    
    }
    
    private static function getFileHeight($file)
    {
        // @TODO return video height
        return "480";    
    }
    
    private static function getFileAudioBitrate($file)
    {
        // @TODO return audio bitrate
        return "1024";    
    }
    
    private static function getFileVideoBitrate($file)
    {
        // @TODO return video bitrate
        return "2048";    
    }
    
    private static function getUserId()
    {
        // @TODO return current user ID
        return "1";    
    }
    
} // VideoPeer
